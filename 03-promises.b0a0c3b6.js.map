{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAI3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,MAZPR,EAAOiB,iBAAiB,UAgBxB,SAAiCC,GAC/BA,EAAMC,iBAMN,IAJA,IAAIC,GAAejB,EAAWkB,MAC1BC,GAAclB,EAAUiB,MACxBE,GAAgBlB,EAAYgB,MAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGJ,GAChBK,MAAK,SAACC,GAAc5B,EAAA6B,OAAOD,QAAQA,MACnCE,OAAM,SAACC,GAAY/B,EAAA6B,OAAOG,QAAQD,MAEnCT,GAAcE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]');\n\nformEl.addEventListener('submit', handleSubmitButtonClick);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() =>{\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay)\n  })\n};\n\nfunction handleSubmitButtonClick(event) {\n  event.preventDefault();\n\n  let delayValue = + inputDelay.value;\n  let stepValue = + inputStep.value;\n  let amountValue = + inputAmount.value;\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n    .then((success) => { Notify.success(success)})\n    .catch((error) => { Notify.failure(error)});\n    \n    delayValue += stepValue;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","event","preventDefault","delayValue","value","stepValue","amountValue","i","then","success","Notify","catch","error","failure"],"version":3,"file":"03-promises.b0a0c3b6.js.map"}